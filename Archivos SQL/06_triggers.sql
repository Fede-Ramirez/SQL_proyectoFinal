USE SECONDARYSCHOOL_DATABASE;

-- INICIO PRIMER TRIGGER

-- Creo la tabla auditoría

DROP TABLE IF EXISTS LOG_TEACHER_AUDIT;
CREATE TABLE IF NOT EXISTS LOG_TEACHER_AUDIT
(
ID_LOG INT AUTO_INCREMENT ,
ID_TEACHER INT NOT NULL ,
FIRST_NAME TEXT(50) DEFAULT NULL,
LAST_NAME TEXT(50) DEFAULT NULL,
ACTION_NAME TEXT(10) ,
NAME_OF_TABLE VARCHAR(50) ,
ACTION_USER VARCHAR(100) ,
DML_DATE DATE    ,
PRIMARY KEY (ID_LOG)
)
;

-- Creo el trigger

DROP TRIGGER IF EXISTS TRG_LOG_TEACHERS ;

DELIMITER //
CREATE TRIGGER  TRG_LOG_TEACHERS AFTER INSERT ON SECONDARYSCHOOL_DATABASE.TEACHERS
FOR EACH ROW 
BEGIN

INSERT INTO LOG_TEACHER_AUDIT (ID_TEACHER, FIRST_NAME , LAST_NAME, ACTION_NAME , NAME_OF_TABLE , ACTION_USER, DML_DATE)
VALUES ( NEW.ID_TEACHER, NEW.FIRST_NAME, NEW.LAST_NAME, 'INSERT' , 'TEACHERS' , CURRENT_USER(), NOW());
       
END//
DELIMITER ;

-- Realizo dos inserts en la tabla TEACHERS 

INSERT INTO TEACHERS(ID_SUBJECT, FIRST_NAME, LAST_NAME, EMAIL, PROFESSIONAL_DEGREE, ADMISSION_DATE)
 VALUES(15, 'Javier', 'Morales', 'moralesjavier@yahoo.com.ar', 'Licenciado en Informática', '2024-03-26');
INSERT INTO TEACHERS(ID_SUBJECT, FIRST_NAME, LAST_NAME, EMAIL, PROFESSIONAL_DEGREE, ADMISSION_DATE) 
VALUES (2, 'Diana', 'Petrone', 'petronediana@gmail.com', 'Licenciada en Ciencias Biológicas', '2024-05-02');

-- Verifico que me devuelve la tabla de auditoría
SELECT * FROM LOG_TEACHER_AUDIT;

-- FIN PRIMER TRIGGER


-- INICIO SEGUNDO TRIGGER

-- Creo la tabla auditoría 2

DROP TABLE IF EXISTS LOG_TEACHER_AUDIT_2;
CREATE TABLE IF NOT EXISTS LOG_TEACHER_AUDIT_2 
(
ID_LOG INT AUTO_INCREMENT ,
NEWFIELD_OLDFIELD VARCHAR(200), 
ACTION_NAME TEXT(10) ,
NAME_OF_TABLE VARCHAR(50) ,
ACTION_USER VARCHAR(100) ,
DML_DATE DATE,
PRIMARY KEY (ID_LOG)
)
;
-- Creo el trigger

DROP TRIGGER IF EXISTS TRG_LOG_TEACHERS_2 ;
DELIMITER //
CREATE TRIGGER TRG_LOG_TEACHERS_2 BEFORE UPDATE ON SECONDARYSCHOOL_DATABASE.TEACHERS
FOR EACH ROW 
BEGIN

INSERT INTO LOG_TEACHER_AUDIT_2 (NEWFIELD_OLDFIELD, ACTION_NAME , NAME_OF_TABLE , ACTION_USER, DML_DATE)
VALUES ( CONCAT('NEW FIELD : ', NEW.LAST_NAME ,' -  OLDFIELD : ', OLD.LAST_NAME ) , 'UPDATE' , 'TEACHERS' , CURRENT_USER(), NOW());

END//
DELIMITER 

-- Solicito los datos de la tabla TEACHERS para ir verificando los cambios
SELECT * FROM TEACHERS; 

-- Realizo la consulta UPDATE
UPDATE SECONDARYSCHOOL_DATABASE.TEACHERS SET LAST_NAME = 'Martinez ' WHERE ID_TEACHER = 19; 

-- Verifico la tabla de auditoría para revisar si el trigger cumple correctamente su función
SELECT * FROM LOG_TEACHER_AUDIT_2 ;

-- FIN SEGUNDO TRIGGER
